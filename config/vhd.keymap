/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/
/* THIS FILE WAS GENERATED!
*
* This file was generated automatically. You may or may not want to
* edit it directly.
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        N00: N00 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N0>;
            label = "N00";
        };

        A1: A1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp N1 &kp N0 &kp N1 &kp N1 &kp N1 &kp N8 &kp N1>;
            label = "A1";
        };

        A2: A2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_2 &kp ENTER>;
            label = "A2";
        };

        A3: A3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_3 &kp ENTER>;
            label = "A3";
        };

        A4: A4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_4 &kp ENTER>;
            label = "A4";
        };
    };

    behaviors {
        TD1: TD1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD1";
            #binding-cells = <0>;
            bindings = <&mt C LG(C)>, <&kp LG(V)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "0";
            bindings = <
&TD1       &kp CAPSLOCK  &kp TAB       &kp BACKSPACE  &kp LEFT_SHIFT  &kp ESCAPE  &kp SPACE        &kp LEFT_ALT    &mkp RCLK     &kp UP_ARROW  &kp DOWN_ARROW  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp EQUAL
&kp LG(A)  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4    &kp N5      &kp ENTER        &kp LEFT_GUI    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8    &kp NUMBER_9    &kp NUMBER_0     &kp MINUS
&kp LG(C)  &kp Q         &kp W         &kp E          &kp R           &kp T       &lt 1 BACKSPACE  &kp LCTRL       &kp Y         &kp U         &kp I           &kp O           &kp P            &kp LEFT_BRACKET
&kp LG(V)  &kp A         &kp S         &kp D          &kp F           &kp G       &lt 2 DELETE     &kp LEFT_SHIFT  &kp H         &kp J         &kp K           &kp L           &kp SEMI         &kp SQT
&kp LG(Z)  &kp Z         &kp X         &kp C          &kp V           &kp B                                        &kp N         &kp M         &kp COMMA       &kp DOT         &kp FSLH         &kp BACKSLASH
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans   &trans   &trans   &none   &none   &none   &none   &none    &none      &none   &none
&trans  &trans  &trans  &trans   &trans   &trans   &tog 3  &trans  &kp N7  &kp N8  &kp N9   &kp SLASH  &trans  &none
&trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans  &kp N4  &kp N5  &kp N6   &kp STAR   &trans  &kp RIGHT_BRACKET
&trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans  &kp N1  &kp N2  &kp N3   &kp MINUS  &trans  &trans
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12                  &N00    &kp N0  &kp DOT  &kp EQUAL  &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &none   &none           &none           &none            &none            &none       &none
&trans  &trans  &trans  &trans  &trans  &none   &trans  &trans  &kp INSERT      &kp HOME        &kp PAGE_UP      &kp C_VOLUME_UP  &kp C_PLAY  &trans
&trans  &trans  &trans  &trans  &trans  &none   &tog 3  &trans  &kp DELETE      &kp END         &kp PAGE_DOWN    &kp C_VOL_DN     &kp K_STOP  &trans
&trans  &trans  &trans  &trans  &trans  &none   &trans  &trans  &none           &kp UP_ARROW    &none            &kp K_MUTE       &kp K_PREV  &trans
&trans  &trans  &trans  &trans  &trans  &A1                     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans           &kp K_NEXT  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans         &trans         &trans          &trans         &trans         &trans  &trans  &none   &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans         &trans          &out OUT_USB   &out OUT_BLE   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 1    &bt BT_SEL 1   &bt BT_SEL 1   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_DISC 0  &bt BT_DISC 0  &bt BT_DISC 0   &bt BT_DISC 0  &bt BT_DISC 0  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bootloader    &trans         &bt BT_CLR_ALL  &trans         &trans                         &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&kp ESC        &kp F1  &kp F2  &kp F3  &kp F4  &kp F5        &none            &none           &none         &none           &none           &none            &none     &none
&kp TAB        &A1     &A2     &A3     &A4     &mt LALT ESC  &lt 5 DELETE     &kp LEFT_ALT    &kp UP_ARROW  &kp DOWN_ARROW  &kp LEFT_ARROW  &kp RIGHT_ARROW  &to 0     &TD1
&kp BACKSPACE  &kp Q   &kp W   &kp E   &kp R   &mt LSHFT T   &lt 6 SPACE      &kp LCTRL       &kp Y         &kp U           &kp I           &kp O            &kp P     &kp LEFT_BRACKET
&kp LSHIFT     &kp A   &kp S   &kp D   &kp F   &mt LCTRL G   &mt LCTRL ENTER  &kp LEFT_SHIFT  &kp H         &kp J           &kp K           &kp L            &kp SEMI  &kp SQT
&kp CAPSLOCK   &kp Z   &kp X   &kp C   &kp V   &kp B                                          &kp N         &kp M           &kp COMMA       &kp DOT          &kp FSLH  &kp BACKSLASH
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans     &trans  &none   &none             &none             &none             &none   &none   &none
&trans  &trans  &trans  &trans  &trans  &kp LC(A)  &trans  &trans  &kp LA(LC(N7))    &kp LA(LC(N8))    &kp LA(LC(N9))    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp LC(C)  &tog 3  &trans  &kp LA(LC(N4))    &kp LA(LC(N5))    &kp LA(LC(N6))    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp LC(V)  &trans  &trans  &kp LA(LC(N1))    &kp LA(LC(N2))    &kp LA(LC(N3))    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp LC(Z)                  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans   &trans   &trans   &none   &none   &none   &none   &none    &none      &none   &none
&trans  &trans  &trans  &trans   &trans   &trans   &tog 3  &trans  &kp N7  &kp N8  &kp N9   &kp SLASH  &trans  &kp RIGHT_BRACKET
&trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans  &kp N4  &kp N5  &kp N6   &kp STAR   &trans  &trans
&trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans  &kp N1  &kp N2  &kp N3   &kp MINUS  &trans  &trans
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12                  &N00    &kp N0  &kp DOT  &kp EQUAL  &trans  &trans
            >;
        };
    };
};
